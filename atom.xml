<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Alan's]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-10-24T02:31:25.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[Alan Lai]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://yoursite.com/2015/10/24/hello-world/"/>
    <id>http://yoursite.com/2015/10/24/hello-world/</id>
    <published>2015-10-24T02:31:25.000Z</published>
    <updated>2015-10-24T02:31:25.000Z</updated>
    <content type="html"><![CDATA[<p><img src="beluga.jpg" alt=""></p>
<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="beluga.jpg" alt=""></p>
<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very firs]]>
    </summary>
    
      <category term="hello" scheme="http://yoursite.com/tags/hello/"/>
    
      <category term="world" scheme="http://yoursite.com/tags/world/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[python练习：建立交互日记系统]]></title>
    <link href="http://yoursite.com/2015/10/23/diary/"/>
    <id>http://yoursite.com/2015/10/23/diary/</id>
    <published>2015-10-23T09:16:53.000Z</published>
    <updated>2015-10-23T10:34:45.000Z</updated>
    <content type="html"><![CDATA[<p>##任务要求</p>
<blockquote>
<ul>
<li>完成一个极简交互式日记系统,需求如下:<ul>
<li>一次接收输入一行日记</li>
<li>保存为本地文件</li>
<li>再次运行系统时,能打印出过往的所有日记</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="Version_1-0">Version 1.0</h2><h3 id="代码">代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    message = sys.argv[<span class="number">1</span>] <span class="comment">#读取命令行中输入的参数</span></span><br><span class="line">    message += <span class="string">'\n'</span> <span class="comment">#添加换行符</span></span><br><span class="line"></span><br><span class="line">    file_path = <span class="string">"/Users/alan/Desktop/diary.txt"</span> <span class="comment">#设定文件路径</span></span><br><span class="line">    f = open(file_path, <span class="string">'a+'</span>) <span class="comment">#建立跟file的连接</span></span><br><span class="line"></span><br><span class="line">    f.write(message) <span class="comment">#写入信息</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#显示file里现有的内容</span></span><br><span class="line">    f.seek(<span class="number">0</span>, <span class="number">0</span>) <span class="comment">#将读写位置移到file最开头</span></span><br><span class="line">    <span class="keyword">print</span> f.read()</span><br><span class="line"></span><br><span class="line">    f.close() <span class="comment">#建立完链接最后记得关掉是一个好习惯</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h3 id="关于中文编码">关于中文编码</h3><p>python的预设编码是ascii，这个可通过运行下列代码知道<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">print</span> sys.getdefaultencoding()</span><br></pre></td></tr></table></figure></p>
<p>但是ascii编码并不支持中文，所以要将编码模式设置成支持中文的utf-8，（win上好像是gbk)，所以要在.py文件开头加这样一句<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br></pre></td></tr></table></figure></p>
<p>如果这样还是没有解决中文编码问题，可以试试用下面三句<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'utf8'</span>)</span><br></pre></td></tr></table></figure></p>
<h3 id="关于file_open_mode">关于file open mode</h3><p>open()函数第二个参数用于确定文件打开的模式：</p>
<ul>
<li><code>r</code> for read<br>只读模式。起始位置在文件开头，也是参数缺省时的模式</li>
<li><code>w</code> for write<br>写入模式。若文件不存在，新建文件进行写入；若文件已存在，先清空原有内容，然后开始写入。只能写不能读。</li>
<li><code>a</code> for append<br>补充模式。若文件不存在，新建文件；若文件已存在，从文件末尾开始写入。只能写不能读。</li>
<li><code>r+</code> = <code>r</code> + <code>w</code> <br>能读能写，起始位置在文件开头。</li>
<li><code>w+</code> = <code>w</code> + <code>r</code> <br>能读能写，但原有内容会被清空。</li>
<li><code>a+</code> = <code>a</code> + <code>w</code> <br>能读能写，起始位置在文件末尾。</li>
</ul>
<hr>
<h2 id="加入时间标记">加入时间标记</h2><p>既然是日记系统，那么应该需要有时间标记。<br>time库里的time.ctime()能输出当时的时间信息，但里面内容太多了，我只需要’年月日’这三个信息就行。<br>而time.strftime()可以做到这一点，然后我选用的时间格式是’%b %d %Y’，关于时间格式的详细介绍可以看time库的官方文档，也可以看<a href="http://strftime.org" target="_blank" rel="external">strftime.org</a>。</p>
<h3 id="代码-1">代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#加入时间信息</span></span><br><span class="line">    message = time.strftime(<span class="string">'%b %d %Y'</span>)+<span class="string">': '</span>+sys.argv[<span class="number">1</span>]+<span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line">    file_path = <span class="string">"/Users/alan/Desktop/"</span> <span class="comment">#设定文件路径</span></span><br><span class="line">    f = open(file_path+<span class="string">'diary.txt'</span>, <span class="string">'a+'</span>) <span class="comment">#建立跟file的连接</span></span><br><span class="line"></span><br><span class="line">    f.write(message) <span class="comment">#写入信息</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#显示file里现有的内容</span></span><br><span class="line">    f.seek(<span class="number">0</span>, <span class="number">0</span>) <span class="comment">#将读写位置移到file最开头</span></span><br><span class="line">    <span class="keyword">print</span> f.read()</span><br><span class="line"></span><br><span class="line">    f.close() <span class="comment">#建立完链接最后记得关掉是一个好习惯</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="存储为md文件">存储为md文件</h2><p>由txt文件存储改为md文件存储有两个好处</p>
<ul>
<li>更为美观的信息设计。我将时间信息改为2级标题。</li>
<li>信息输入能使用markdown标记，例如<code>这条信息</code>，我可以写成<code>这条**信息**</code>，用来强调<code>信息</code>。</li>
</ul>
<h3 id="代码-2">代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 建立模板，'\'为续行符</span></span><br><span class="line">    template = \</span><br><span class="line"><span class="string">'''</span><br><span class="line">## &#123;my_time&#125;</span><br><span class="line">&#123;message&#125;</span><br><span class="line"></span><br><span class="line">'''</span></span><br><span class="line">    my_time = time.strftime(<span class="string">'%b %d %Y'</span>)</span><br><span class="line">    message = sys.argv[<span class="number">1</span>]</span><br><span class="line">    to_write = template.format(my_time=my_time, message=message)</span><br><span class="line"></span><br><span class="line">    file_path = <span class="string">"/Users/alan/Desktop/"</span> <span class="comment">#设定文件路径，后缀名改为.md</span></span><br><span class="line">    f = open(file_path+<span class="string">'diary.md'</span>, <span class="string">'a+'</span>) <span class="comment">#建立跟file的连接</span></span><br><span class="line"></span><br><span class="line">    f.write(to_write) <span class="comment">#写入信息</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#显示file里现有的内容</span></span><br><span class="line">    f.seek(<span class="number">0</span>, <span class="number">0</span>) <span class="comment">#将读写位置移到file最开头</span></span><br><span class="line">    <span class="keyword">print</span> f.read()</span><br><span class="line"></span><br><span class="line">    f.close() </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="在命令行中直接预览md">在命令行中直接预览md</h2><p>命令行中输出的是纯文本格式，如果能显示markdown格式就更好了</p>
<p>网上进行<a href="https://www.google.com.hk/?q=view+markdown+in+command+line" target="_blank" rel="external">搜索</a>，在<a href="http://unix.stackexchange.com/questions/4140/markdown-viewer" target="_blank" rel="external">第一个链接</a>的问答中了解到了<a href="https://github.com/axiros/terminal_markdown_viewer" target="_blank" rel="external">terminal_markdown_viewer</a>这个项目。</p>
<p>然后阅读项目说明发现这是用python写的，能作为第三方库被python作如下调用</p>
<p><strong>安装</strong><br>直接把<a href="https://github.com/axiros/terminal_markdown_viewer" target="_blank" rel="external">项目</a>下载下来，解压缩放到diary.md同级的目录下</p>
<p><strong>使用</strong><br>这个项目里，核心的<code>mdv.py</code>模块调用了目录下很多其他的模块，所以需要将整个<code>terminal_markdown-viewer</code>目录作为一个库进行调用。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> terminal_markdown_viewer-master <span class="keyword">import</span> mdv</span><br></pre></td></tr></table></figure>
<p>然后的使用方法很简单，项目官网给出的说明是</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config like this:</span></span><br><span class="line">mdv.term_columns = <span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># calling like this</span></span><br><span class="line">formatted = mdv.main(my_raw_markdown, c_theme=...)  <span class="comment"># all CLI options supported</span></span><br></pre></td></tr></table></figure>
<h3 id="代码-3">代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> terminal_markdown_viewer-master <span class="keyword">import</span> mdv </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#建立初始模板</span></span><br><span class="line">    template = \</span><br><span class="line"><span class="string">'''</span><br><span class="line">## &#123;my_time&#125;</span><br><span class="line">&#123;message&#125;</span><br><span class="line"></span><br><span class="line">'''</span></span><br><span class="line"></span><br><span class="line">    my_time = time.strftime(<span class="string">'%b %d %Y'</span>)</span><br><span class="line">    message = sys.argv[<span class="number">1</span>]</span><br><span class="line">    to_write = template.format(my_time=my_time, message=message)</span><br><span class="line"></span><br><span class="line">    file_path = <span class="string">"/Users/alan/Desktop/"</span> <span class="comment">#设定文件路径，后缀名改为.md</span></span><br><span class="line">    f = open(file_path+<span class="string">'diary.md'</span>, <span class="string">'a+'</span>) <span class="comment">#建立跟file的连接</span></span><br><span class="line"></span><br><span class="line">    f.write(to_write) <span class="comment">#写入信息</span></span><br><span class="line"></span><br><span class="line">    f.seek(<span class="number">0</span>, <span class="number">0</span>) <span class="comment">#将读写位置移到file最开头</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#调用mdv.py显示md文本</span></span><br><span class="line">    mdv.term_columns = <span class="number">60</span></span><br><span class="line">    formatted = mdv.main(f.read(), theme=<span class="string">'528.9419'</span>)</span><br><span class="line">    <span class="keyword">print</span> formatted</span><br><span class="line"></span><br><span class="line">    f.close() </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<p>使用效果如下</p>
<p><img src="http://i13.tietuku.com/00fc9e2b68b4c368.png" alt="terminal_markdown_viewer"></p>
<p>ps: 输入 ‘`’，要用逃逸符号，前面加’\’</p>
<hr>
<h2 id="将md转换成html在浏览器中浏览">将md转换成html在浏览器中浏览</h2><p>尝试了在命令行中输出结果后，准备尝试一下把diary.md转换成html格式，然后在浏览器中浏览。</p>
<p>找到了python的一个扩展库<a href="http://pythonhosted.org/Markdown/reference.html" target="_blank" rel="external">markdown</a>, 发现里面的markdown.markdownFromFile ()函数可以将diary.md转换为diary.html</p>
<p>然后配合webbrowser.open()函数在浏览器里打开diary.html</p>
<h3 id="代码-4">代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> sys, time, markdown, webbrowser</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#建立初始模板    </span></span><br><span class="line">    template = \</span><br><span class="line"><span class="string">'''</span><br><span class="line">## &#123;my_time&#125;</span><br><span class="line">&#123;message&#125;</span><br><span class="line"></span><br><span class="line">'''</span></span><br><span class="line"></span><br><span class="line">    my_time = time.strftime(<span class="string">'%b %d %Y'</span>)</span><br><span class="line">    message = sys.argv[<span class="number">1</span>]</span><br><span class="line">    to_write = template.format(my_time=my_time, message=message)</span><br><span class="line"></span><br><span class="line">    file_path = <span class="string">"/Users/alan/Desktop/"</span> <span class="comment">#设定文件路径，后缀名改为.md</span></span><br><span class="line">    f = open(file_path+<span class="string">'diary.md'</span>, <span class="string">'a'</span>) <span class="comment">#建立跟file的连接，改为'a'模式</span></span><br><span class="line"></span><br><span class="line">    f.write(to_write) <span class="comment">#写入信息</span></span><br><span class="line">    f.close()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#将diary.md转换为diary.html</span></span><br><span class="line">    markdown.markdownFromFile(<span class="string">'diary.md'</span>, <span class="string">'diary.html'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#浏览器里打开本地的diary.md</span></span><br><span class="line">    webbrowser.open(<span class="string">'file://'</span>+file_path+<span class="string">'diary.html'</span>) <span class="comment">#文件路径前面加file://</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<p>打开后中文显示为乱码，将safari编码设置改为unicode(utf-8)之后中文显示就正常了，效果如下：<br><img src="http://i11.tietuku.com/04677c130357bdbc.png" alt=""><br><img src="http://i11.tietuku.com/aa136cb885771316.png" alt=""></p>
<hr>
<h2 id="用pandoc进行格式转换和样式添加">用pandoc进行格式转换和样式添加</h2><p>可以看到version2.2中，inline code并没有正确显示，这是因为<code>markdown.markdownFromFile()</code>只是将markdown的语法改为了html中的一些tag，并没有提供样式信息，之前出现的中文乱码，也是因为html文件开头没有编码格式的说明。</p>
<p>这时候想到了从<a href="http://www.yangzhiping.com/tech/pandoc.html" target="_blank" rel="external">阳老博客</a>里知道的格式转换神器<a href="http://pandoc.org" target="_blank" rel="external"><code>pandoc</code></a>，印象中pandoc可以将md转换为完整的html，而且可以添加样式。</p>
<p><strong>安装</strong><br>官网里有<code>pandoc</code>的<a href="http://pandoc.org/installing.html" target="_blank" rel="external">安装说明</a>，<br>mac用户可以在<a href="https://github.com/jgm/pandoc/releases/1.15.1" target="_blank" rel="external">这里</a>下载<code>pandoc-1.15.1-osx.pkg</code>直接进行安装。</p>
<p><strong>使用</strong><br>用<code>$ pandoc --help</code>看参数说明</p>
<ul>
<li><code>-f</code>后面输入源格式(markdown) #optional</li>
<li><code>-t</code>后面输入目的格式(html) #optional</li>
<li><code>-o</code>后面输入目的文件(diary.html)</li>
<li><code>-c</code>后面输入目标样式(style.css) #optional</li>
<li>源文件(diary.md)前面可以不加参数</li>
</ul>
<p>我在网上下了一个<a href="https://gist.github.com/andyferra/2554919" target="_blank" rel="external">css样式</a>，文件名为<code>github.css</code>，解压后将它放到diary.md的同级目录</p>
<p>之后想把<code>diary.md</code>转换为运用<code>github.css</code>样式的<code>diary.html</code>，<br>就可以<code>$ pandoc diary.md -o diary.html -c style.css</code></p>
<p>了解了<code>pandoc</code>的使用，就可以开始码python代码了</p>
<ul>
<li>用subprocess.call()调用命令行的<code>pandoc</code>命令</li>
<li>还是webbrowser.open()打开diary.html</li>
</ul>
<h3 id="代码-5">代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> sys, time, webbrowser</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> call</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#建立初始模板</span></span><br><span class="line">    template = \</span><br><span class="line"><span class="string">'''</span><br><span class="line">## &#123;my_time&#125;</span><br><span class="line">&#123;message&#125;</span><br><span class="line"></span><br><span class="line">'''</span></span><br><span class="line"></span><br><span class="line">    my_time = time.strftime(<span class="string">'%b %d %Y'</span>)</span><br><span class="line">    message = sys.argv[<span class="number">1</span>]</span><br><span class="line">    to_write = template.format(my_time=my_time, message=message)</span><br><span class="line"></span><br><span class="line">    file_path = <span class="string">"/Users/alan/Desktop/"</span></span><br><span class="line">    f = open(file_path+<span class="string">'diary.md'</span>, <span class="string">'a'</span>)</span><br><span class="line"></span><br><span class="line">    f.write(to_write)</span><br><span class="line">    f.close() </span><br><span class="line">    </span><br><span class="line">    <span class="comment">#将diary.md转换为diary.html</span></span><br><span class="line">    call([<span class="string">'pandoc'</span>, <span class="string">'diary.md'</span>, <span class="string">'-o'</span>, <span class="string">'diary.html'</span>, <span class="string">'-c'</span>, <span class="string">'github.css'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment">#浏览器里打开本地的diary.md</span></span><br><span class="line">    webbrowser.open(<span class="string">'file://'</span>+file_path+<span class="string">'diary.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<p>显示效果：<br><img src="http://i13.tietuku.com/c7b0aa8a27cf3269.png" alt=""></p>
<p>更美观了，代码块也正确显示了。</p>
<h2 id="在Sublime_Text_3中编辑输入信息">在Sublime Text 3中编辑输入信息</h2><p>之前的版本里一直是以命令行里的参数作为日记内容进行输入的，是否能找到方法像使用<code>git commit</code>时那样</p>
<ul>
<li>激活Sublime Text 3(下简称为ST3)</li>
<li>在ST3里输入信息</li>
<li>保存关闭ST3之后，编辑的信息输入进diary.py程序用于后继处理</li>
</ul>
<p>因为ST3进行设置有个命令行命令<code>subl</code>，可以用<code>$ subl &lt;file&gt;</code>来用ST3打开文件。<br>所以我最初的想法是</p>
<ul>
<li>通过<code>subprocess.call</code>调用命令行的命令<code>subl</code></li>
<li>用<code>$ subl temp.txt</code>打开临时文件</li>
<li>写入要记录的信息进<code>temp.txt</code>，关闭ST3</li>
<li>将<code>temp.txt</code>的信息读写进储存信息的<code>diary.md</code>里</li>
<li>删除临时文件<code>temp.txt</code></li>
</ul>
<p>根据这个思路，将原代码中的</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">message = sys.argv[<span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<p>改为</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">subprocess.call(<span class="string">"subl temp.txt"</span>.split())</span><br><span class="line">f = open(<span class="string">'temp.txt'</span>, <span class="string">'r'</span>)</span><br><span class="line">message = f.read()</span><br><span class="line">f.close()</span><br><span class="line">os.remove(<span class="string">'temp.txt'</span>)</span><br></pre></td></tr></table></figure>
<p>运行后出错，错误信息为</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IOError: [Errno <span class="number">2</span>] No such <span class="built_in">file</span> <span class="operator">or</span> <span class="built_in">directory</span>: <span class="string">'temp.txt'</span></span><br></pre></td></tr></table></figure>
<p>想了以后发现了</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subprocess.call(<span class="string">"subl temp.txt"</span>.split())</span><br></pre></td></tr></table></figure>
<p>上述语句在打开<code>temp.txt</code>的同时就已经在执行了后面的命令</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">'temp.txt'</span>, <span class="string">'r'</span>)</span><br></pre></td></tr></table></figure>
<p>因为还没来得及写入信息保存<code>temp.txt</code>，所以结果会出现”No such file”的错误。</p>
<p>后来用<code>$ subl --help</code>看看<code>subl</code>的参数，发现参数说明里</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-<span class="keyword">w</span> <span class="built_in">or</span> --wai<span class="variable">t:</span>        Wait <span class="keyword">for</span> the <span class="keyword">files</span> <span class="keyword">to</span> <span class="keyword">be</span> closed before returning</span><br></pre></td></tr></table></figure>
<p>然后将<code>subprocess.call(&quot;subl temp.txt&quot;.split())</code>改为<code>subprocess.call(&quot;subl -w temp.txt&quot;.split())</code>之后代码运行成功。</p>
<p>此外，还找到python里<a href="https://docs.python.org/2/library/tempfile.html" target="_blank" rel="external"><code>tempfile</code>库</a>，可以用它来创立临时文件来代替<code>temp.txt</code>。</p>
<h3 id="代码-6">代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> time, tempfile, webbrowser</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> call</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#建立初始模板</span></span><br><span class="line">    template = \</span><br><span class="line"><span class="string">'''</span><br><span class="line">## &#123;my_time&#125;</span><br><span class="line">&#123;message&#125;</span><br><span class="line"></span><br><span class="line">'''</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 时间信息</span></span><br><span class="line">    my_time = time.strftime(<span class="string">'%b %d %Y'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用户输入的信息</span></span><br><span class="line">    tempf =  tempfile.NamedTemporaryFile(suffix=<span class="string">".tmp"</span>) <span class="comment">#创立临时文件</span></span><br><span class="line">    call([<span class="string">'subl'</span>, <span class="string">'-w'</span>, tempf.name]) <span class="comment">#打开ST3编辑临时文件</span></span><br><span class="line">    message = tempf.read()</span><br><span class="line">    tempf.close()</span><br><span class="line"></span><br><span class="line">    to_write = template.format(my_time=my_time, message=message)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写入信息到diary.md</span></span><br><span class="line">    file_path = <span class="string">"/Users/alan/Desktop/"</span> <span class="comment">#设定文件路径，后缀名改为.md</span></span><br><span class="line">    f = open(file_path+<span class="string">'diary.md'</span>, <span class="string">'a+'</span>) <span class="comment">#建立跟file的连接</span></span><br><span class="line">    f.write(to_write) <span class="comment">#写入信息</span></span><br><span class="line">    f.close() </span><br><span class="line"></span><br><span class="line">    <span class="comment">#将diary.md转换为diary.html</span></span><br><span class="line">    call([<span class="string">'pandoc'</span>, <span class="string">'diary.md'</span>, <span class="string">'-o'</span>, <span class="string">'diary.html'</span>, <span class="string">'-c'</span>, <span class="string">'github.css'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment">#浏览器里打开本地的diary.md</span></span><br><span class="line">    webbrowser.open(<span class="string">'file://'</span>+file_path+<span class="string">'diary.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h2 id="使用docopt进行参数解析">使用docopt进行参数解析</h2><ul>
<li>将<code>main()</code>函数拆分为write()和read()两个函数</li>
<li>用<code>docopt</code>进行参数解析</li>
</ul>
<p>关于<code>docopt</code>的更多介绍可以看我写的<a href="https://wp-lai.gitbooks.io/learn-python/content/0MOOC/docopt.html" target="_blank" rel="external"><code>docopt</code>教程</a></p>
<h3 id="代码-7">代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># author: "Alan Lai"</span></span><br><span class="line"><span class="comment"># mail: "techwplai@gmail.com"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"""alan_diary</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  diary.py [options]</span><br><span class="line">  diary.py (-h | --help)</span><br><span class="line">  diary.py --version</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -r --read     Read your diary archive.         </span><br><span class="line">  -w --write    Write a new diary entry.</span><br><span class="line">  -h --help     Help doc.</span><br><span class="line">  --version     Show version.</span><br><span class="line"></span><br><span class="line">"""</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time, tempfile, webbrowser, os</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> call</span><br><span class="line"><span class="keyword">from</span> docopt <span class="keyword">import</span> docopt</span><br><span class="line"></span><br><span class="line">file_path = os.getcwd() + <span class="string">'/'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#建立初始模板</span></span><br><span class="line">    template = \</span><br><span class="line"><span class="string">'''</span><br><span class="line">## &#123;my_time&#125;</span><br><span class="line">&#123;message&#125;</span><br><span class="line"></span><br><span class="line">'''</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 时间信息</span></span><br><span class="line">    my_time = time.strftime(<span class="string">'%b %d %Y'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用户输入的信息</span></span><br><span class="line">    tempf =  tempfile.NamedTemporaryFile(suffix=<span class="string">".tmp"</span>) <span class="comment">#创立临时文件</span></span><br><span class="line">    call([<span class="string">'subl'</span>, <span class="string">'-w'</span>, tempf.name]) <span class="comment">#打开ST3编辑临时文件</span></span><br><span class="line">    message = tempf.read()</span><br><span class="line">    tempf.close()</span><br><span class="line"></span><br><span class="line">    to_write = template.format(my_time=my_time, message=message)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写入信息到diary.md</span></span><br><span class="line">    f = open(file_path+<span class="string">'diary.md'</span>, <span class="string">'a'</span>)</span><br><span class="line">    f.write(to_write)</span><br><span class="line">    f.close() </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#将diary.md转换为diary.html</span></span><br><span class="line">    call([<span class="string">'pandoc'</span>, <span class="string">'diary.md'</span>, <span class="string">'-o'</span>, <span class="string">'diary.html'</span>, <span class="string">'-c'</span>, <span class="string">'github.css'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment">#浏览器里打开本地的diary.md</span></span><br><span class="line">    webbrowser.open(<span class="string">'file://'</span>+file_path+<span class="string">'diary.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    arguments = docopt(__doc__, version=<span class="string">'alan_diary 4.0'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> arguments[<span class="string">'--write'</span>] <span class="keyword">and</span> arguments[<span class="string">'--read'</span>]:</span><br><span class="line">        write()</span><br><span class="line">        read()</span><br><span class="line">    <span class="keyword">elif</span> arguments[<span class="string">'--write'</span>]:</span><br><span class="line">        write()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        read()</span><br></pre></td></tr></table></figure>
<h2 id="添加初始化日记本功能">添加初始化日记本功能</h2><p>如果一开始就使用</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python diary<span class="class">.md</span> -r</span><br></pre></td></tr></table></figure>
<p>会出现’no such file’的错误，因为还没创建日记本，无法进行初次阅读</p>
<p>所以先建立一个初始化的函数init(), 然后在不存在diary.md时调用它。</p>
<h3 id="代码-8">代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""初始化日记本"""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创造diary.md</span></span><br><span class="line">    f = open(<span class="string">'diary.md'</span>, <span class="string">"w"</span>)</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    <span class="comment"># docopt会返回一个涉及参数的字典</span></span><br><span class="line">    arguments = docopt(__doc__, version=<span class="string">'alan_diary 4.1'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'diary.md'</span>):</span><br><span class="line">        init()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> arguments[<span class="string">'--write'</span>] <span class="keyword">and</span> arguments[<span class="string">'--read'</span>]: <span class="comment">#-wr时先写再读</span></span><br><span class="line">        write()</span><br><span class="line">        read()</span><br><span class="line">    <span class="keyword">elif</span> arguments[<span class="string">'--write'</span>]: <span class="comment">#-w时写入</span></span><br><span class="line">        write()</span><br><span class="line">    <span class="keyword">else</span>: <span class="comment">#-r或不带参数时阅读</span></span><br><span class="line">        read()</span><br></pre></td></tr></table></figure>
<h2 id="用web库中的markdown模块进行格式转换">用web库中的markdown模块进行格式转换</h2><p><code>Pandoc</code>是个非常强大的软件，但用在我这里有点大材小用，而且要求用户预先安装了<code>Pandoc</code>也有点太不人性化了。</p>
<p>除了之前提到的第三方库<code>markdown</code>之外，我发现<code>web.py</code>中自带了一个<a href="https://github.com/webpy/webpy/blob/master/tools/markdown.py" target="_blank" rel="external"><code>markdown.py</code>模块</a>，可以进行md到html的格式转换，而且更易用。</p>
<p>但是转换后的html文件只是<code>&lt;body&gt;&lt;/body&gt;</code>中的内容，要补足头尾的<code>HTML</code>信息</p>
<h3 id="代码-9">代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># author: "Alan Lai"</span></span><br><span class="line"><span class="comment"># mail: "techwplai@gmail.com"</span></span><br><span class="line"><span class="comment"># with support of Sublime Text, Pandoc &amp; docopt</span></span><br><span class="line"><span class="comment"># with Thanks to andyferra's github.css</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给docopt提供帮助文档</span></span><br><span class="line"><span class="string">"""alan_diary</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  diary.py [options]</span><br><span class="line">  diary.py (-h | --help)</span><br><span class="line">  diary.py --version</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -r --read     阅读所有日记        </span><br><span class="line">  -w --write    新添一条日记</span><br><span class="line">  -h --help     显示帮助文档</span><br><span class="line">  --version     显示版本信息</span><br><span class="line"></span><br><span class="line">"""</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入所需模块和函数</span></span><br><span class="line"><span class="keyword">import</span> time, tempfile, webbrowser, os</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> call</span><br><span class="line"><span class="keyword">from</span> docopt <span class="keyword">import</span> docopt</span><br><span class="line"><span class="keyword">from</span> markdown <span class="keyword">import</span> markdown</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取文件所在路径</span></span><br><span class="line">file_path = os.getcwd() + <span class="string">'/'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""调用ST3编辑输入信息"""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#建立初始模板，"\"是续行符</span></span><br><span class="line">    template = \</span><br><span class="line"><span class="string">'''</span><br><span class="line">## &#123;my_time&#125;</span><br><span class="line">&#123;message&#125;</span><br><span class="line"></span><br><span class="line">'''</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 时间信息</span></span><br><span class="line">    my_time = time.strftime(<span class="string">'%b %d %Y'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用户输入的信息</span></span><br><span class="line">    tempf =  tempfile.NamedTemporaryFile(suffix=<span class="string">".tmp"</span>) <span class="comment">#创立临时文件</span></span><br><span class="line">    call([<span class="string">'subl'</span>, <span class="string">'-w'</span>, tempf.name]) <span class="comment">#打开ST3编辑临时文件</span></span><br><span class="line">    message = tempf.read() <span class="comment">#读出到message里</span></span><br><span class="line">    tempf.close()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将时间和记录传入模板里</span></span><br><span class="line">    to_write = template.format(my_time=my_time, message=message)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写入信息到diary.md</span></span><br><span class="line">    f = open(file_path+<span class="string">'diary.md'</span>, <span class="string">'a'</span>)</span><br><span class="line">    f.write(to_write)</span><br><span class="line">    f.close() </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""在默认浏览器中浏览日记"""</span></span><br><span class="line"></span><br><span class="line">    head = \</span><br><span class="line"><span class="string">'''</span><br><span class="line">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span><br><span class="line">&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;</span><br><span class="line">  &lt;meta http-equiv="Content-Style-Type" content="text/css" /&gt;</span><br><span class="line">  &lt;meta name="generator" content="pandoc" /&gt;</span><br><span class="line">  &lt;title&gt;小小日记本&lt;/title&gt;</span><br><span class="line">  &lt;style type="text/css"&gt;code&#123;white-space: pre;&#125;&lt;/style&gt;</span><br><span class="line">  &lt;link rel="stylesheet" href="github.css" type="text/css" /&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">'''</span></span><br><span class="line"></span><br><span class="line">    end = \</span><br><span class="line"><span class="string">'''</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">'''</span></span><br><span class="line">    </span><br><span class="line">    f = open(<span class="string">'diary.md'</span>)</span><br><span class="line">    body = markdown(f.read())</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line">    htmlcontent = head + body +end</span><br><span class="line">    </span><br><span class="line">    f = open(<span class="string">'diary.html'</span>, <span class="string">'w'</span>)</span><br><span class="line">    f.write(htmlcontent)</span><br><span class="line">    f.close</span><br><span class="line"></span><br><span class="line">    <span class="comment">#浏览器里打开本地的diary.md，打开本地html文件时用file://开头</span></span><br><span class="line">    webbrowser.open(<span class="string">'file://'</span>+file_path+<span class="string">'diary.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""初始化日记本"""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创造diary.md</span></span><br><span class="line">    f = open(<span class="string">'diary.md'</span>, <span class="string">"w"</span>)</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    <span class="comment"># docopt会返回一个涉及参数的字典</span></span><br><span class="line">    arguments = docopt(__doc__, version=<span class="string">'alan_diary 4.2'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'diary.md'</span>):</span><br><span class="line">        init()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> arguments[<span class="string">'--write'</span>] <span class="keyword">and</span> arguments[<span class="string">'--read'</span>]: <span class="comment">#-wr时先写再读</span></span><br><span class="line">        write()</span><br><span class="line">        read()</span><br><span class="line">    <span class="keyword">elif</span> arguments[<span class="string">'--write'</span>]: <span class="comment">#-w时写入</span></span><br><span class="line">        write()</span><br><span class="line">    <span class="keyword">else</span>: <span class="comment">#-r或不带参数时阅读</span></span><br><span class="line">        read()</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>##任务要求</p>
<blockquote>
<ul>
<li>完成一个极简交互式日记系统,需求如下:<ul>
<li>一次接收输入一行日记</li>
<li>保存为本地文件</li>
<li>再次运行系统时,能打印出过往的所有日记</li>
</ul>
</li>
</]]>
    </summary>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
</feed>
